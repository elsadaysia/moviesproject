{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(formBuilder, apiService, router) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.router = router;\n    this.form = this.formBuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n  submit() {\n    const emailValue = this.form.get('email')?.value;\n    const passwordValue = this.form.get('password')?.value;\n    this.apiService.login({\n      email: emailValue,\n      password: passwordValue\n    }).subscribe(response => {\n      // Handle successful login response here\n      alert('Login successful');\n      this.router.navigate(['/dashboard']); // Redirect to dashboard or desired route\n    }, error => {\n      if (error.status === 401) {\n        alert('Invalid email or password');\n      } else {\n        alert('An error occurred. Please try again later.');\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","formBuilder","apiService","router","form","group","email","password","submit","emailValue","get","value","passwordValue","login","subscribe","response","alert","navigate","error","status","__decorate","selector","templateUrl"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ApiService } from './api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    private router: Router\n  ) {\n    this.form = this.formBuilder.group({\n      email: [''],\n      password: [''],\n    });\n  }\n\n  submit() {\n    const emailValue = this.form.get('email')?.value;\n    const passwordValue = this.form.get('password')?.value;\n\n    this.apiService.login({ email: emailValue, password: passwordValue }).subscribe(\n      (response) => {\n        // Handle successful login response here\n        alert('Login successful');\n        this.router.navigate(['/dashboard']); // Redirect to dashboard or desired route\n      },\n      (error) => {\n        if (error.status === 401) {\n          alert('Invalid email or password');\n        } else {\n          alert('An error occurred. Please try again later.');\n        }\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YACUC,WAAwB,EACxBC,UAAsB,EACtBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,MAAM,GAANA,MAAM;IAEd,IAAI,CAACC,IAAI,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACJ;EAEAC,MAAMA,CAAA;IACJ,MAAMC,UAAU,GAAG,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;IAChD,MAAMC,aAAa,GAAG,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;IAEtD,IAAI,CAACT,UAAU,CAACW,KAAK,CAAC;MAAEP,KAAK,EAAEG,UAAU;MAAEF,QAAQ,EAAEK;IAAa,CAAE,CAAC,CAACE,SAAS,CAC5EC,QAAQ,IAAI;MACX;MACAC,KAAK,CAAC,kBAAkB,CAAC;MACzB,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,EACAC,KAAK,IAAI;MACR,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxBH,KAAK,CAAC,2BAA2B,CAAC;OACnC,MAAM;QACLA,KAAK,CAAC,4CAA4C,CAAC;;IAEvD,CAAC,CACF;EACH;CACD;AAjCYjB,cAAc,GAAAqB,UAAA,EAJ1BtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE;CACd,CAAC,C,EACWvB,cAAc,CAiC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}