{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/movies';\n  }\n  getMovies(token) {\n    const headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      crossorigin: true\n    };\n    console.log('tokenFromMovie', headers);\n  }\n  addMovie(movieData) {\n    return this.http.post(`${this.apiUrl}/addmovie`, movieData);\n  }\n  getMovieTitle(movieId) {\n    // Define the API endpoint for fetching the movie title by movieId\n    const url = `${this.apiUrl}/movies/${movieId}/title`;\n    // Send an HTTP GET request to the endpoint\n    return this.http.get(url);\n  }\n}\n_class = MovieService;\n_class.ɵfac = function MovieService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["MovieService","constructor","http","apiUrl","getMovies","token","headers","Accept","crossorigin","console","log","addMovie","movieData","post","getMovieTitle","movieId","url","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private apiUrl = 'http://localhost:3000/movies'; \n\n  constructor(private http: HttpClient) { }\n\n  getMovies(token: string) {\n    const headers = {\n      Accept:\"application/json\",\n      \"Content-Type\":\"application/json\",\n      \"Access-Control-Allow-Origin\":\"*\",\n      crossorigin:true\n    }\n\n    console.log('tokenFromMovie', headers)\n  }\n\n  addMovie(movieData: any) {\n    return this.http.post(`${this.apiUrl}/addmovie`, movieData);\n  }\n\n  getMovieTitle(movieId: string): Observable<string> {\n    // Define the API endpoint for fetching the movie title by movieId\n    const url = `${this.apiUrl}/movies/${movieId}/title`;\n\n    // Send an HTTP GET request to the endpoint\n    return this.http.get<string>(url);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,8BAA8B;EAEP;EAExCC,SAASA,CAACC,KAAa;IACrB,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAC,kBAAkB;MACzB,cAAc,EAAC,kBAAkB;MACjC,6BAA6B,EAAC,GAAG;MACjCC,WAAW,EAAC;KACb;IAEDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,OAAO,CAAC;EACxC;EAEAK,QAAQA,CAACC,SAAc;IACrB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAC,GAAG,IAAI,CAACV,MAAM,WAAW,EAAES,SAAS,CAAC;EAC7D;EAEAE,aAAaA,CAACC,OAAe;IAC3B;IACA,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACb,MAAM,WAAWY,OAAO,QAAQ;IAEpD;IACA,OAAO,IAAI,CAACb,IAAI,CAACe,GAAG,CAASD,GAAG,CAAC;EACnC;;SA1BWhB,YAAY;;mBAAZA,MAAY,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAZrB,MAAY;EAAAsB,OAAA,EAAZtB,MAAY,CAAAuB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}