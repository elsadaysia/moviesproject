{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"../movie.service\";\nexport class MovieDetailComponent {\n  constructor(route, apiService, movieService, router) {\n    this.route = route;\n    this.apiService = apiService;\n    this.movieService = movieService;\n    this.router = router;\n    this.movieId = null; // Initialize movieId as null or with a default value\n  }\n\n  ngOnInit() {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n  }\n  bookmarkMovie() {\n    const token = this.apiService.getToken(); // Assuming you have a method to get the JWT token\n    if (!token) {\n      // Handle unauthorized access, e.g., redirect to login\n      this.router.navigate(['/login']);\n      return;\n    }\n    if (this.movieId) {\n      this.movieService.bookmarkm(this.movieId, token).subscribe(response => {\n        console.log('Movie bookmarked successfully!', response);\n        // Handle success, e.g., show a success message\n        this.router.navigate(['/movies']); // Redirect to /movies on success\n      }, error => {\n        console.error('Error bookmarking movie:', error);\n        // Handle error, e.g., show an error message\n      });\n    }\n  }\n}\n_class = MovieDetailComponent;\n_class.ɵfac = function MovieDetailComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.MovieService), i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-movie-detail\"]],\n  decls: 2,\n  vars: 0,\n  template: function MovieDetailComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"movie-detail works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["MovieDetailComponent","constructor","route","apiService","movieService","router","movieId","ngOnInit","snapshot","paramMap","get","bookmarkMovie","token","getToken","navigate","bookmarkm","subscribe","response","console","log","error","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ApiService","i3","MovieService","Router","selectors","decls","vars","template","MovieDetailComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie-detail\\movie-detail.component.ts","D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie-detail\\movie-detail.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service'; \nimport { MovieService } from '../movie.service'\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css'],\n})\nexport class MovieDetailComponent implements OnInit {\n  movieId: string | null = null; // Initialize movieId as null or with a default value\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private movieService: MovieService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n  }\n\n  bookmarkMovie() {\n    const token = this.apiService.getToken(); // Assuming you have a method to get the JWT token\n  \n    if (!token) {\n      // Handle unauthorized access, e.g., redirect to login\n      this.router.navigate(['/login']);\n      return;\n    }\n  \n    if (this.movieId) {\n      this.movieService.bookmarkm(this.movieId, token).subscribe(\n        (response: any) => { // Explicitly type the response as 'any'\n          console.log('Movie bookmarked successfully!', response);\n          // Handle success, e.g., show a success message\n          this.router.navigate(['/movies']); // Redirect to /movies on success\n        },\n        (error: any) => { // Explicitly type the error as 'any'\n          console.error('Error bookmarking movie:', error);\n          // Handle error, e.g., show an error message\n        }\n      );\n    }\n  }\n}  ","<p>movie-detail works!</p>\n"],"mappings":";;;;;AASA,OAAM,MAAOA,oBAAoB;EAG/BC,YACUC,KAAqB,EACrBC,UAAsB,EACtBC,YAA0B,EAC1BC,MAAc;IAHd,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,OAAO,GAAkB,IAAI,CAAC,CAAC;EAO5B;;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACD,OAAO,GAAG,IAAI,CAACJ,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;EACvD;EAEAC,aAAaA,CAAA;IACX,MAAMC,KAAK,GAAG,IAAI,CAACT,UAAU,CAACU,QAAQ,EAAE,CAAC,CAAC;IAE1C,IAAI,CAACD,KAAK,EAAE;MACV;MACA,IAAI,CAACP,MAAM,CAACS,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC;;IAGF,IAAI,IAAI,CAACR,OAAO,EAAE;MAChB,IAAI,CAACF,YAAY,CAACW,SAAS,CAAC,IAAI,CAACT,OAAO,EAAEM,KAAK,CAAC,CAACI,SAAS,CACvDC,QAAa,IAAI;QAChBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,QAAQ,CAAC;QACvD;QACA,IAAI,CAACZ,MAAM,CAACS,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,EACAM,KAAU,IAAI;QACbF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD;MACF,CAAC,CACF;;EAEL;;SApCWpB,oBAAoB;;mBAApBA,MAAoB,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,YAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAM,MAAA;AAAA;;QAApB7B,MAAoB;EAAA8B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjCd,EAAA,CAAAgB,cAAA,QAAG;MAAAhB,EAAA,CAAAiB,MAAA,0BAAmB;MAAAjB,EAAA,CAAAkB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}