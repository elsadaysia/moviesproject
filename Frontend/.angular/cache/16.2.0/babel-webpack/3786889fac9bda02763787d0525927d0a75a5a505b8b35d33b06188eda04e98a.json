{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../movie.service\";\nimport * as i2 from \"../api.service\";\nexport class MovieComponent {\n  constructor(movieService, apiService) {\n    this.movieService = movieService;\n    this.apiService = apiService;\n    this.movies = [];\n  }\n  ngOnInit() {\n    // After a successful login, the authentication service should store the JWT token.\n    // You can access it from there.\n    const userToken = this.apiService.getToken();\n    if (!userToken) {\n      // Handle the case where the token is not available (e.g., user is not logged in)\n      console.error('User is not authenticated.');\n      return;\n    }\n    // Use the retrieved token to fetch movies\n    this.movieService.getMovies(userToken).subscribe(data => {\n      this.movies = data;\n    });\n  }\n}\n_class = MovieComponent;\n_class.ɵfac = function MovieComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.MovieService), i0.ɵɵdirectiveInject(i2.ApiService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-movie\"]],\n  decls: 2,\n  vars: 0,\n  template: function MovieComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"movie works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["MovieComponent","constructor","movieService","apiService","movies","ngOnInit","userToken","getToken","console","error","getMovies","subscribe","data","i0","ɵɵdirectiveInject","i1","MovieService","i2","ApiService","selectors","decls","vars","template","MovieComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie\\movie.component.ts","D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie\\movie.component.html"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { MovieService } from '../movie.service'\nimport { ApiService} from '../api.service'\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit{\n  movies: any[] = [];\n\n  constructor(\n    private movieService: MovieService,\n    private apiService: ApiService \n  ) { }\n\n  ngOnInit() {\n    // After a successful login, the authentication service should store the JWT token.\n    // You can access it from there.\n    const userToken = this.apiService.getToken(); \n\n    if (!userToken) {\n      // Handle the case where the token is not available (e.g., user is not logged in)\n      console.error('User is not authenticated.');\n      return;\n    }\n\n    // Use the retrieved token to fetch movies\n    this.movieService.getMovies(userToken).subscribe(data => {\n      this.movies = data;\n    });\n  }\n}","<p>movie works!</p>\n"],"mappings":";;;;AASA,OAAM,MAAOA,cAAc;EAGzBC,YACUC,YAA0B,EAC1BC,UAAsB;IADtB,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,UAAU,GAAVA,UAAU;IAJpB,KAAAC,MAAM,GAAU,EAAE;EAKd;EAEJC,QAAQA,CAAA;IACN;IACA;IACA,MAAMC,SAAS,GAAG,IAAI,CAACH,UAAU,CAACI,QAAQ,EAAE;IAE5C,IAAI,CAACD,SAAS,EAAE;MACd;MACAE,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC3C;;IAGF;IACA,IAAI,CAACP,YAAY,CAACQ,SAAS,CAACJ,SAAS,CAAC,CAACK,SAAS,CAACC,IAAI,IAAG;MACtD,IAAI,CAACR,MAAM,GAAGQ,IAAI;IACpB,CAAC,CAAC;EACJ;;SAvBWZ,cAAc;;mBAAdA,MAAc,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;;QAAdlB,MAAc;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT3BX,EAAA,CAAAa,cAAA,QAAG;MAAAb,EAAA,CAAAc,MAAA,mBAAY;MAAAd,EAAA,CAAAe,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}