{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MovieDetailComponent = class MovieDetailComponent {\n  constructor(route, authService, movieService, router) {\n    this.route = route;\n    this.authService = authService;\n    this.movieService = movieService;\n    this.router = router;\n    this.movieId = null; // Initialize movieId as null or with a default value\n  }\n\n  ngOnInit() {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n  }\n  bookmarkMovie() {\n    const token = this.authService.getToken(); // Assuming you have a method to get the JWT token\n    if (!token) {\n      // Handle unauthorized access, e.g., redirect to login\n      this.router.navigate(['/login']);\n      return;\n    }\n    if (this.movieId) {\n      this.movieService.bookmarkMovie(this.movieId, token).subscribe(response => {\n        console.log('Movie bookmarked successfully!', response);\n        // Handle success, e.g., show a success message\n        this.router.navigate(['/movies']); // Redirect to /movies on success\n      }, error => {\n        console.error('Error bookmarking movie:', error);\n        // Handle error, e.g., show an error message\n      });\n    }\n  }\n};\n\nMovieDetailComponent = __decorate([Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})], MovieDetailComponent);","map":{"version":3,"names":["Component","MovieDetailComponent","constructor","route","authService","movieService","router","movieId","ngOnInit","snapshot","paramMap","get","bookmarkMovie","token","getToken","navigate","subscribe","response","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie-detail\\movie-detail.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service'; // Import your authentication service\nimport { MovieService } from '../movie.service'; // Import your movie service\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css'],\n})\nexport class MovieDetailComponent implements OnInit {\n  movieId: string | null = null; // Initialize movieId as null or with a default value\n\n  constructor(\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private movieService: MovieService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n  }\n\n  bookmarkMovie() {\n    const token = this.authService.getToken(); // Assuming you have a method to get the JWT token\n\n    if (!token) {\n      // Handle unauthorized access, e.g., redirect to login\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    if (this.movieId) {\n      this.movieService.bookmarkMovie(this.movieId, token).subscribe(\n        (response) => {\n          console.log('Movie bookmarked successfully!', response);\n          // Handle success, e.g., show a success message\n          this.router.navigate(['/movies']); // Redirect to /movies on success\n        },\n        (error) => {\n          console.error('Error bookmarking movie:', error);\n          // Handle error, e.g., show an error message\n        }\n      );\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YACUC,KAAqB,EACrBC,WAAwB,EACxBC,YAA0B,EAC1BC,MAAc;IAHd,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,OAAO,GAAkB,IAAI,CAAC,CAAC;EAO5B;;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACD,OAAO,GAAG,IAAI,CAACJ,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;EACvD;EAEAC,aAAaA,CAAA;IACX,MAAMC,KAAK,GAAG,IAAI,CAACT,WAAW,CAACU,QAAQ,EAAE,CAAC,CAAC;IAE3C,IAAI,CAACD,KAAK,EAAE;MACV;MACA,IAAI,CAACP,MAAM,CAACS,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC;;IAGF,IAAI,IAAI,CAACR,OAAO,EAAE;MAChB,IAAI,CAACF,YAAY,CAACO,aAAa,CAAC,IAAI,CAACL,OAAO,EAAEM,KAAK,CAAC,CAACG,SAAS,CAC3DC,QAAQ,IAAI;QACXC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,QAAQ,CAAC;QACvD;QACA,IAAI,CAACX,MAAM,CAACS,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,EACAK,KAAK,IAAI;QACRF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD;MACF,CAAC,CACF;;EAEL;CACD;;AArCYnB,oBAAoB,GAAAoB,UAAA,EALhCrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWvB,oBAAoB,CAqChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}