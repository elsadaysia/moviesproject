{"ast":null,"code":"this.movieService.bookmarkMovie(this.movieId, token).subscribe(response => {\n  console.log('Movie bookmarked successfully!', response);\n  // Handle success, e.g., show a success message\n  this.router.navigate(['/movies']); // Redirect to /movies on success\n}, error => {\n  console.error('Error bookmarking movie:', error);\n  // Handle error, e.g., show an error message\n}, class MovieDetailComponent {\n  constructor(route, apiService, movieService, router) {\n    this.route = route;\n    this.apiService = apiService;\n    this.movieService = movieService;\n    this.router = router;\n    this.movieId = null; // Initialize movieId as null or with a default value\n  }\n\n  ngOnInit() {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n  }\n  bookmarkMovie() {\n    const token = this.apiService.getToken(); // Assuming you have a method to get the JWT token\n    if (!token) {\n      // Handle unauthorized access, e.g., redirect to login\n      this.router.navigate(['/login']);\n      return;\n    }\n    if (this.movieId) {\n      this.movieService.bookmarkMovie(this.movieId, token).subscribe(response => {\n        console.log('Movie bookmarked successfully!', response);\n        // Handle success, e.g., show a success message\n        this.router.navigate(['/movies']); // Redirect to /movies on success\n      }, error => {\n        console.error('Error bookmarking movie:', error);\n        // Handle error, e.g., show an error message\n      });\n    }\n  }\n});\n\nexport {};","map":{"version":3,"names":["movieService","bookmarkMovie","movieId","token","subscribe","response","console","log","router","navigate","error","MovieDetailComponent","constructor","route","apiService","ngOnInit","snapshot","paramMap","get","getToken"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie-detail\\movie-detail.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service'; // Import your authentication service\nthis.movieService.bookmarkMovie(this.movieId, token).subscribe(\n  (response) => {\n    console.log('Movie bookmarked successfully!', response);\n    // Handle success, e.g., show a success message\n    this.router.navigate(['/movies']); // Redirect to /movies on success\n  },\n  (error) => {\n    console.error('Error bookmarking movie:', error);\n    // Handle error, e.g., show an error message\n  }\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css'],\n})\nexport class MovieDetailComponent implements OnInit {\n  movieId: string | null = null; // Initialize movieId as null or with a default value\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private movieService: MovieService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.movieId = this.route.snapshot.paramMap.get('id');\n  }\n\n  bookmarkMovie() {\n    const token = this.apiService.getToken(); // Assuming you have a method to get the JWT token\n\n    if (!token) {\n      // Handle unauthorized access, e.g., redirect to login\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    if (this.movieId) {\n      this.movieService.bookmarkMovie(this.movieId, token).subscribe(\n        (response) => {\n          console.log('Movie bookmarked successfully!', response);\n          // Handle success, e.g., show a success message\n          this.router.navigate(['/movies']); // Redirect to /movies on success\n        },\n        (error) => {\n          console.error('Error bookmarking movie:', error);\n          // Handle error, e.g., show an error message\n        }\n      );\n    }\n  }\n}\n"],"mappings":"AAGA,IAAI,CAACA,YAAY,CAACC,aAAa,CAAC,IAAI,CAACC,OAAO,EAAEC,KAAK,CAAC,CAACC,SAAS,CAC3DC,QAAQ,IAAI;EACXC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,QAAQ,CAAC;EACvD;EACA,IAAI,CAACG,MAAM,CAACC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,EACAC,KAAK,IAAI;EACRJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAChD;AACF,CAAC,EAEH,MAKaC,oBAAoB;EAG/BC,YACUC,KAAqB,EACrBC,UAAsB,EACtBd,YAA0B,EAC1BQ,MAAc;IAHd,KAAAK,KAAK,GAALA,KAAK;IACL,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAd,YAAY,GAAZA,YAAY;IACZ,KAAAQ,MAAM,GAANA,MAAM;IANhB,KAAAN,OAAO,GAAkB,IAAI,CAAC,CAAC;EAO5B;;EAEHa,QAAQA,CAAA;IACN,IAAI,CAACb,OAAO,GAAG,IAAI,CAACW,KAAK,CAACG,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;EACvD;EAEAjB,aAAaA,CAAA;IACX,MAAME,KAAK,GAAG,IAAI,CAACW,UAAU,CAACK,QAAQ,EAAE,CAAC,CAAC;IAE1C,IAAI,CAAChB,KAAK,EAAE;MACV;MACA,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC;;IAGF,IAAI,IAAI,CAACP,OAAO,EAAE;MAChB,IAAI,CAACF,YAAY,CAACC,aAAa,CAAC,IAAI,CAACC,OAAO,EAAEC,KAAK,CAAC,CAACC,SAAS,CAC3DC,QAAQ,IAAI;QACXC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,QAAQ,CAAC;QACvD;QACA,IAAI,CAACG,MAAM,CAACC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,EACAC,KAAK,IAAI;QACRJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD;MACF,CAAC,CACF;;EAEL;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}