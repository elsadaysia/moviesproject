{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../movie.service\";\nimport * as i2 from \"../api.service\";\nfunction MovieListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Synopsis:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", post_r1.synopsis, \"\");\n  }\n}\nexport class MovieListComponent {\n  constructor(movieService, apiService) {\n    this.movieService = movieService;\n    this.apiService = apiService;\n    this.movies = [];\n  }\n  ngOnInit() {\n    // After a successful login, the authentication service should store the JWT token.\n    // You can access it from there.\n    const userToken = this.apiService.getToken(); // Replace with the actual method in your AuthService\n    if (!userToken) {\n      // Handle the case where the token is not available (e.g., user is not logged in)\n      console.error('User is not authenticated.');\n      return;\n    }\n    // Use the retrieved token to fetch movies\n    this.movieService.getMovies(userToken).subscribe(data => {\n      this.movies = data;\n    });\n  }\n}\n_class = MovieListComponent;\n_class.ɵfac = function MovieListComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.MovieService), i0.ɵɵdirectiveInject(i2.ApiService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-movie-list\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"movie-details\", 4, \"ngFor\", \"ngForOf\"], [1, \"movie-details\"]],\n  template: function MovieListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MovieListComponent_div_0_Template, 7, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","post_r1","title","ɵɵtextInterpolate1","synopsis","MovieListComponent","constructor","movieService","apiService","movies","ngOnInit","userToken","getToken","console","error","getMovies","subscribe","data","ɵɵdirectiveInject","i1","MovieService","i2","ApiService","selectors","decls","vars","consts","template","MovieListComponent_Template","rf","ctx","ɵɵtemplate","MovieListComponent_div_0_Template","ɵɵproperty","posts"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movies\\movies.component.ts","D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movies\\movies.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MovieService } from '../movie.service';\nimport { ApiService } from '../api.service'; // Import your authentication service\n\n@Component({\n  selector: 'app-movie-list',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MovieListComponent implements OnInit {\n  movies: any[] = [];\n\n  constructor(\n    private movieService: MovieService,\n    private apiService: ApiService \n  ) { }\n\n  ngOnInit() {\n    // After a successful login, the authentication service should store the JWT token.\n    // You can access it from there.\n    const userToken = this.apiService.getToken(); // Replace with the actual method in your AuthService\n\n    if (!userToken) {\n      // Handle the case where the token is not available (e.g., user is not logged in)\n      console.error('User is not authenticated.');\n      return;\n    }\n\n    // Use the retrieved token to fetch movies\n    this.movieService.getMovies(userToken).subscribe(data => {\n      this.movies = data;\n    });\n  }\n}\n","<div *ngFor=\"let post of posts\" class=\"movie-details\">\n  <h2>{{ post.title }}</h2>\n  <p><strong>Synopsis:</strong> {{ post.synopsis }}</p>\n  <!-- Rest of the movie details -->\n</div>\n\n\n"],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,aAAsD;IAChDD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzBH,EAAA,CAAAC,cAAA,QAAG;IAAQD,EAAA,CAAAE,MAAA,gBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IADjDH,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,KAAA,CAAgB;IACUP,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAQ,kBAAA,MAAAF,OAAA,CAAAG,QAAA,KAAmB;;;ADOnD,OAAM,MAAOC,kBAAkB;EAG7BC,YACUC,YAA0B,EAC1BC,UAAsB;IADtB,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,UAAU,GAAVA,UAAU;IAJpB,KAAAC,MAAM,GAAU,EAAE;EAKd;EAEJC,QAAQA,CAAA;IACN;IACA;IACA,MAAMC,SAAS,GAAG,IAAI,CAACH,UAAU,CAACI,QAAQ,EAAE,CAAC,CAAC;IAE9C,IAAI,CAACD,SAAS,EAAE;MACd;MACAE,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC3C;;IAGF;IACA,IAAI,CAACP,YAAY,CAACQ,SAAS,CAACJ,SAAS,CAAC,CAACK,SAAS,CAACC,IAAI,IAAG;MACtD,IAAI,CAACR,MAAM,GAAGQ,IAAI;IACpB,CAAC,CAAC;EACJ;;SAvBWZ,kBAAkB;;mBAAlBA,MAAkB,EAAAV,EAAA,CAAAuB,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAzB,EAAA,CAAAuB,iBAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;;QAAlBjB,MAAkB;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT/BlC,EAAA,CAAAoC,UAAA,IAAAC,iCAAA,iBAIM;;;MAJgBrC,EAAA,CAAAsC,UAAA,YAAAH,GAAA,CAAAI,KAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}