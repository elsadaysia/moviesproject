{"ast":null,"code":"var _class;\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000'; // Your backend API URL\n  }\n\n  getPosts() {\n    return this.http.get(this.baseUrl);\n  }\n  registerUser(userData) {\n    return this.http.post(`${this.apiUrl}/register`, userData).pipe(catchError(error => {\n      console.error('Observable error:', error);\n      throw error;\n    }));\n  }\n  login(credentials) {\n    const url = `${this.apiUrl}/login`;\n    return this.http.post(url, credentials);\n  }\n}\n_class = ApiService;\n_class.ɵfac = function ApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","ApiService","constructor","http","apiUrl","getPosts","get","baseUrl","registerUser","userData","post","pipe","error","console","login","credentials","url","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private apiUrl = 'http://localhost:3000'; // Your backend API URL\n\n  constructor(private http: HttpClient) {}\n\n  getPosts(){\n    return this.http.get(this.baseUrl);\n  }\n  registerUser(userData: any) {\n    return this.http.post(`${this.apiUrl}/register`, userData).pipe(\n      catchError(error => {\n        console.error('Observable error:', error);\n        throw error;\n      })\n    )\n  }\n  login(credentials: { email: string; password: string }): Observable<any> {\n    const url = `${this.apiUrl}/login`;\n    return this.http.post(url, credentials);\n  }\n\n}\n"],"mappings":";AAEA,SAASA,UAAU,QAAQ,gBAAgB;;;AAM3C,OAAM,MAAOC,UAAU;EAIrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB,CAAC,CAAC;EAEH;;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC;EACpC;EACAC,YAAYA,CAACC,QAAa;IACxB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,WAAW,EAAEK,QAAQ,CAAC,CAACE,IAAI,CAC7DX,UAAU,CAACY,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK;IACb,CAAC,CAAC,CACH;EACH;EACAE,KAAKA,CAACC,WAAgD;IACpD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACZ,MAAM,QAAQ;IAClC,OAAO,IAAI,CAACD,IAAI,CAACO,IAAI,CAACM,GAAG,EAAED,WAAW,CAAC;EACzC;;SApBWd,UAAU;;mBAAVA,MAAU,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAVnB,MAAU;EAAAoB,OAAA,EAAVpB,MAAU,CAAAqB,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}