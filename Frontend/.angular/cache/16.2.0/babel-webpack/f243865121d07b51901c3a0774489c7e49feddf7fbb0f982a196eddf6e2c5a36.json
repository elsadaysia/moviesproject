{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MovieComponent = class MovieComponent {\n  constructor(movieService, apiService) {\n    this.movieService = movieService;\n    this.apiService = apiService;\n    this.movies = [];\n  }\n  ngOnInit() {\n    // After a successful login, the authentication service should store the JWT token.\n    // You can access it from there.\n    const userToken = this.apiService.getToken();\n    if (!userToken) {\n      // Handle the case where the token is not available (e.g., user is not logged in)\n      console.error('User is not authenticated.');\n      return;\n    }\n    // Use the retrieved token to fetch movies\n    this.movieService.getMovies(userToken).subscribe(data => {\n      this.movies = data;\n    });\n  }\n};\nMovieComponent = __decorate([Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})], MovieComponent);","map":{"version":3,"names":["Component","MovieComponent","constructor","movieService","apiService","movies","ngOnInit","userToken","getToken","console","error","getMovies","subscribe","data","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie\\movie.component.ts"],"sourcesContent":["import { Component, On} from '@angular/core';\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit{\n  movies: any[] = [];\n\n  constructor(\n    private movieService: MovieService,\n    private apiService: ApiService \n  ) { }\n\n  ngOnInit() {\n    // After a successful login, the authentication service should store the JWT token.\n    // You can access it from there.\n    const userToken = this.apiService.getToken(); \n\n    if (!userToken) {\n      // Handle the case where the token is not available (e.g., user is not logged in)\n      console.error('User is not authenticated.');\n      return;\n    }\n\n    // Use the retrieved token to fetch movies\n    this.movieService.getMovies(userToken).subscribe(data => {\n      this.movies = data;\n    });\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAW,eAAe;AAOrC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YACUC,YAA0B,EAC1BC,UAAsB;IADtB,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,UAAU,GAAVA,UAAU;IAJpB,KAAAC,MAAM,GAAU,EAAE;EAKd;EAEJC,QAAQA,CAAA;IACN;IACA;IACA,MAAMC,SAAS,GAAG,IAAI,CAACH,UAAU,CAACI,QAAQ,EAAE;IAE5C,IAAI,CAACD,SAAS,EAAE;MACd;MACAE,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;MAC3C;;IAGF;IACA,IAAI,CAACP,YAAY,CAACQ,SAAS,CAACJ,SAAS,CAAC,CAACK,SAAS,CAACC,IAAI,IAAG;MACtD,IAAI,CAACR,MAAM,GAAGQ,IAAI;IACpB,CAAC,CAAC;EACJ;CACD;AAxBYZ,cAAc,GAAAa,UAAA,EAL1Bd,SAAS,CAAC;EACTe,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWhB,cAAc,CAwB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}