{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MovieComponent = class MovieComponent {\n  constructor(movieService, apiService) {\n    this.movieService = movieService;\n    this.apiService = apiService;\n    this.movies = [];\n    this.userToken = null;\n  }\n  ngOnInit() {\n    this.userToken = localStorage.getItem('accessToken');\n    console.log('tokenInMovie', this.userToken);\n    if (!this.userToken) {\n      console.error('User is not authenticated.');\n      return;\n    }\n    this.movieService.getMovies(this.userToken).subscribe(data => {\n      this.movies = data;\n    }, error => {\n      if (error.status === 401) {\n        console.error('Unauthorized: Please log in again.');\n      } else {\n        console.error('An error occurred while fetching movies:', error);\n      }\n    });\n  }\n};\nMovieComponent = __decorate([Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})], MovieComponent);","map":{"version":3,"names":["Component","MovieComponent","constructor","movieService","apiService","movies","userToken","ngOnInit","localStorage","getItem","console","log","error","getMovies","subscribe","data","status","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie\\movie.component.ts"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { MovieService } from '../movie.service'\nimport { ApiService } from '../api.service'\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  movies: any[] = [];\n  userToken: string | null = null; \n\n  constructor(\n    private movieService: MovieService,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    this.userToken = localStorage.getItem('accessToken');\n    console.log('tokenInMovie', this.userToken)\n\n    if (!this.userToken) {\n      console.error('User is not authenticated.');\n      return;\n    }\n\n    this.movieService.getMovies(this.userToken).subscribe(\n      (data) => {\n        this.movies = data;\n      },\n      (error) => {\n        if (error.status === 401) {\n          console.error('Unauthorized: Please log in again.');\n        } else {\n          console.error('An error occurred while fetching movies:', error);\n        }\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAe,eAAe;AASzC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YACUC,YAA0B,EAC1BC,UAAsB;IADtB,KAAAD,YAAY,GAAZA,YAAY;IACZ,KAAAC,UAAU,GAAVA,UAAU;IALpB,KAAAC,MAAM,GAAU,EAAE;IAClB,KAAAC,SAAS,GAAkB,IAAI;EAK5B;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACD,SAAS,GAAGE,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACpDC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE,IAAI,CAACL,SAAS,CAAC;IAE3C,IAAI,CAAC,IAAI,CAACA,SAAS,EAAE;MACnBI,OAAO,CAACE,KAAK,CAAC,4BAA4B,CAAC;MAC3C;;IAGF,IAAI,CAACT,YAAY,CAACU,SAAS,CAAC,IAAI,CAACP,SAAS,CAAC,CAACQ,SAAS,CAClDC,IAAI,IAAI;MACP,IAAI,CAACV,MAAM,GAAGU,IAAI;IACpB,CAAC,EACAH,KAAK,IAAI;MACR,IAAIA,KAAK,CAACI,MAAM,KAAK,GAAG,EAAE;QACxBN,OAAO,CAACE,KAAK,CAAC,oCAAoC,CAAC;OACpD,MAAM;QACLF,OAAO,CAACE,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;;IAEpE,CAAC,CACF;EACH;CACD;AA/BYX,cAAc,GAAAgB,UAAA,EAL1BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWnB,cAAc,CA+B1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}