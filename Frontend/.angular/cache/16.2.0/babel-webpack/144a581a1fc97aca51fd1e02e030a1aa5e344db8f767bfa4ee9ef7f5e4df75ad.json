{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movie\\movie.component.ts"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\nimport { MovieService } from '../movie.service'\nimport { ApiService } from '../api.service'\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {}\n\n\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n  movies: any[] = [];\n  userToken: string | null = null; // Define the type explicitly\n\n\n  constructor(\n    private movieService: MovieService,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // Retrieve the token from localStorage\n    this.userToken = localStorage.getItem('accessToken');\n    \n    console.log('tokenInMovie', this.userToken)\n\n    if (!this.userToken) {\n      // Handle the case where the token is not available (e.g., user is not logged in)\n      console.error('User is not authenticated.');\n      return;\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer `+ this.userToken\n    });\n\n    // Use the retrieved token to fetch movies\n    this.http.get<any>('http://localhost:3000/movies', { headers }).subscribe(\n      (data) => {\n        this.movies = data;\n      },\n      (error) => {\n        if (error.status === 401) {\n          console.error('Unauthorized: Please log in again.');\n          // Handle unauthorized access here (e.g., redirect to login page)\n        } else {\n          console.error('An error occurred while fetching movies:', error);\n          // Handle other errors here\n        }\n      }\n    );\n  }\n}"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}