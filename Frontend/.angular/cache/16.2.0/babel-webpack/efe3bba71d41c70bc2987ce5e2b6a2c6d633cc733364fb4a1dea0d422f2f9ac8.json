{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction MoviesComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n    i0.ɵɵtext(5, \"Synopsis:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.title);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", post_r1.synopsis, \"\");\n  }\n}\nexport class MoviesComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  ngOnInit() {\n    const accessToken = localStorage.getItem('accessToken');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}` // Include the token here\n      })\n    };\n    // If the token is present, you can use it in your API requests\n    this.service.getPosts(httpOptions).subscribe(response => {\n      this.posts = response;\n    }, error => {\n      if (error.status === 401) {\n        alert('Unauthorized, please log in again.');\n        this.router.navigate(['/login']);\n      } else {\n        console.error('Error:', error);\n        alert('An error occurred. Please try again later.');\n      }\n    });\n  }\n}\n_class = MoviesComponent;\n_class.ɵfac = function MoviesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-movies\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"movie-details\", 4, \"ngFor\", \"ngForOf\"], [1, \"movie-details\"]],\n  template: function MoviesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MoviesComponent_div_0_Template, 7, 2, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","post_r1","title","ɵɵtextInterpolate1","synopsis","MoviesComponent","constructor","service","router","ngOnInit","accessToken","localStorage","getItem","httpOptions","headers","getPosts","subscribe","response","posts","error","status","alert","navigate","console","ɵɵdirectiveInject","i1","ApiService","i2","Router","selectors","decls","vars","consts","template","MoviesComponent_Template","rf","ctx","ɵɵtemplate","MoviesComponent_div_0_Template","ɵɵproperty"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movies\\movies.component.ts","D:\\GIT\\FinalProject2\\Frontend\\src\\app\\movies\\movies.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { HttpHeaders } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-movies',\n  templateUrl: './movies.component.html',\n  styleUrls: ['./movies.component.css']\n})\nexport class MoviesComponent implements OnInit {\n  posts: any;\n  constructor(private service: ApiService, private router: Router) {}\n  ngOnInit() {\n    const accessToken = localStorage.getItem('accessToken');\n    \n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${accessToken}` // Include the token here\n      })\n    };\n\n    // If the token is present, you can use it in your API requests\n    this.service.getPosts(httpOptions).subscribe(\n      (response) => {\n        this.posts = response;\n      },\n      (error) => {\n        if (error.status === 401) {\n          alert('Unauthorized, please log in again.');\n          this.router.navigate(['/login']);\n        } else {\n          console.error('Error:', error);\n          alert('An error occurred. Please try again later.');\n        }\n      }\n    );\n  }\n}\n","<div *ngFor=\"let post of posts\" class=\"movie-details\">\n  <h2>{{ post.title }}</h2>\n  <p><strong>Synopsis:</strong> {{ post.synopsis }}</p>\n  <!-- Rest of the movie details -->\n</div>\n\n\n"],"mappings":";AAGA,SAASA,WAAW,QAAQ,sBAAsB;;;;;;;ICHlDC,EAAA,CAAAC,cAAA,aAAsD;IAChDD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzBH,EAAA,CAAAC,cAAA,QAAG;IAAQD,EAAA,CAAAE,MAAA,gBAAS;IAAAF,EAAA,CAAAG,YAAA,EAAS;IAACH,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IADjDH,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,KAAA,CAAgB;IACUP,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAQ,kBAAA,MAAAF,OAAA,CAAAG,QAAA,KAAmB;;;ADSnD,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,OAAmB,EAAUC,MAAc;IAA3C,KAAAD,OAAO,GAAPA,OAAO;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAClEC,QAAQA,CAAA;IACN,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAEvD,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIpB,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUgB,WAAW,EAAE,CAAC;OAC1C;KACF;IAED;IACA,IAAI,CAACH,OAAO,CAACQ,QAAQ,CAACF,WAAW,CAAC,CAACG,SAAS,CACzCC,QAAQ,IAAI;MACX,IAAI,CAACC,KAAK,GAAGD,QAAQ;IACvB,CAAC,EACAE,KAAK,IAAI;MACR,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxBC,KAAK,CAAC,oCAAoC,CAAC;QAC3C,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;OACjC,MAAM;QACLC,OAAO,CAACJ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BE,KAAK,CAAC,4CAA4C,CAAC;;IAEvD,CAAC,CACF;EACH;;SA5BWhB,eAAe;;mBAAfA,MAAe,EAAAV,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAA/B,EAAA,CAAA6B,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;QAAfvB,MAAe;EAAAwB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCX5BxC,EAAA,CAAA0C,UAAA,IAAAC,8BAAA,iBAIM;;;MAJgB3C,EAAA,CAAA4C,UAAA,YAAAH,GAAA,CAAAlB,KAAA,CAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}