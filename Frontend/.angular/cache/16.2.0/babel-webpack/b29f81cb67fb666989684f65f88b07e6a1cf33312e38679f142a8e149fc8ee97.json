{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(formBuilder, apiService, router) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.router = router;\n    this.form = this.formBuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n  // submit() {\n  //   const emailValue = this.form.get('email')?.value;\n  //   const passwordValue = this.form.get('password')?.value;\n  //   this.apiService.login({ email: emailValue, password: passwordValue }).subscribe(\n  //     (response) => {\n  //       // Handle successful login response here\n  //       alert('Login successful');\n  //       this.router.navigate(['/movies']); // Redirect to movies or desired route\n  //     },\n  //     (error) => {\n  //       alert('Login failed'); // Display a general error message\n  //       // You can also customize the error message based on the error response\n  //       // For example, if (error.status === 401), show \"Invalid email or password\"\n  //     }\n  //   );\n  // }\n  submit() {\n    const emailValue = this.form.get('email')?.value;\n    const passwordValue = this.form.get('password')?.value;\n    this.apiService.login({\n      email: emailValue,\n      password: passwordValue\n    }).subscribe(response => {\n      // Extract and store the JWT token here\n      const accessToken = response.accessToken;\n      // Store the token securely (e.g., in local storage)\n      localStorage.setItem('accessToken', accessToken);\n      // Redirect to the desired route (e.g., '/movies')\n      this.router.navigate(['/movies']);\n    }, error => {\n      // Handle login errors here\n      alert('Login failed'); // Display a general error message\n      // You can also customize the error message based on the error response\n      // For example, if (error.status === 401), show \"Invalid email or password\"\n    });\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 22,\n  vars: 1,\n  consts: [[1, \"login-container\"], [1, \"text\"], [3, \"formGroup\", \"submit\"], [1, \"form-group\"], [1, \"input-group\"], [1, \"input-group-text\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"red\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-envelope-fill\"], [\"d\", \"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z\"], [\"formControlName\", \"email\", \"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Email\", \"required\", \"\", 1, \"form-control\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"16\", \"height\", \"16\", \"fill\", \"red\", \"viewBox\", \"0 0 16 16\", 1, \"bi\", \"bi-key-fill\"], [\"d\", \"M3.5 11.5a3.5 3.5 0 1 1 3.163-5H14L15.5 8 14 9.5l-1-1-1 1-1-1-1 1-1-1-1 1H6.663a3.5 3.5 0 0 1-3.163 2zM2.5 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\"], [\"routerLink\", \"/register\", 1, \"btn\", \"btn-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_3_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"span\", 5);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(7, \"svg\", 6);\n      i0.ɵɵelement(8, \"path\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelement(9, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"div\", 4)(12, \"span\", 5);\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(13, \"svg\", 9);\n      i0.ɵɵelement(14, \"path\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵnamespaceHTML();\n      i0.ɵɵelement(15, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"button\", 12);\n      i0.ɵɵtext(17, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"br\")(19, \"br\");\n      i0.ɵɵelementStart(20, \"a\", 13);\n      i0.ɵɵtext(21, \"Register\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i3.RouterLink, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\n   max-width: 400px;\\n   margin: 40px auto;\\n   padding: 20px;\\n   border: 1px solid #ccc;\\n   border-radius: 5px;\\n }\\n \\n .form-group[_ngcontent-%COMP%] {\\n   margin-bottom: 15px;\\n }\\n \\n .btn-danger[_ngcontent-%COMP%] {\\n   width: 100%;\\n }\\n\\n .text[_ngcontent-%COMP%]{\\n  text-align: center;\\n }\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtHQUNHLGdCQUFnQjtHQUNoQixpQkFBaUI7R0FDakIsYUFBYTtHQUNiLHNCQUFzQjtHQUN0QixrQkFBa0I7Q0FDcEI7O0NBRUE7R0FDRSxtQkFBbUI7Q0FDckI7O0NBRUE7R0FDRSxXQUFXO0NBQ2I7O0NBRUE7RUFDQyxrQkFBa0I7Q0FDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGFpbmVyIHtcclxuICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgbWFyZ2luOiA0MHB4IGF1dG87XHJcbiAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuIH1cclxuIFxyXG4gLmZvcm0tZ3JvdXAge1xyXG4gICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gfVxyXG4gXHJcbiAuYnRuLWRhbmdlciB7XHJcbiAgIHdpZHRoOiAxMDAlO1xyXG4gfVxyXG5cclxuIC50ZXh0e1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","formBuilder","apiService","router","form","group","email","password","submit","emailValue","get","value","passwordValue","login","subscribe","response","accessToken","localStorage","setItem","navigate","error","alert","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_submit_3_listener","ɵɵnamespaceSVG","ɵɵelement","ɵɵnamespaceHTML","ɵɵadvance","ɵɵproperty"],"sources":["D:\\GIT\\FinalProject2\\Frontend\\src\\app\\login\\login.component.ts","D:\\GIT\\FinalProject2\\Frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ApiService } from '../api.service'; // Import your API service\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent{\n  form: FormGroup;\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    private router: Router\n  ) {\n    this.form = this.formBuilder.group({\n      email: [''],\n      password: [''],\n    });\n  }\n  // submit() {\n  //   const emailValue = this.form.get('email')?.value;\n  //   const passwordValue = this.form.get('password')?.value;\n\n  //   this.apiService.login({ email: emailValue, password: passwordValue }).subscribe(\n  //     (response) => {\n  //       // Handle successful login response here\n  //       alert('Login successful');\n  //       this.router.navigate(['/movies']); // Redirect to movies or desired route\n  //     },\n  //     (error) => {\n  //       alert('Login failed'); // Display a general error message\n  //       // You can also customize the error message based on the error response\n  //       // For example, if (error.status === 401), show \"Invalid email or password\"\n  //     }\n  //   );\n  // }\n  submit() {\n    const emailValue = this.form.get('email')?.value;\n    const passwordValue = this.form.get('password')?.value;\n  \n    this.apiService.login({ email: emailValue, password: passwordValue }).subscribe(\n      (response) => {\n        // Extract and store the JWT token here\n        const accessToken = response.accessToken;\n  \n        // Store the token securely (e.g., in local storage)\n        localStorage.setItem('accessToken', accessToken);\n  \n        // Redirect to the desired route (e.g., '/movies')\n        this.router.navigate(['/movies']);\n      },\n      (error) => {\n        // Handle login errors here\n        alert('Login failed'); // Display a general error message\n        // You can also customize the error message based on the error response\n        // For example, if (error.status === 401), show \"Invalid email or password\"\n      }\n    );\n  }\n  \n\n  \n}\n","<div class=\"login-container\">\n  <h2 class=\"text\">Login</h2>\n  <form [formGroup]=\"form\" (submit)=\"submit()\">\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <span class=\"input-group-text\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" class=\"bi bi-envelope-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z\"/>\n          </svg>\n        </span>\n        <input formControlName=\"email\" type=\"text\" id=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Email\" required>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <span class=\"input-group-text\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" class=\"bi bi-key-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M3.5 11.5a3.5 3.5 0 1 1 3.163-5H14L15.5 8 14 9.5l-1-1-1 1-1-1-1 1-1-1-1 1H6.663a3.5 3.5 0 0 1-3.163 2zM2.5 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"/>\n          </svg>\n        </span>\n        <input formControlName=\"password\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" class=\"form-control\" required>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-danger\">Login</button><br><br>\n    <a routerLink=\"/register\" class=\"btn btn-danger\">Register</a>\n\n  </form>\n</div>\n"],"mappings":";;;;;AASA,OAAM,MAAOA,cAAc;EAEzBC,YACUC,WAAwB,EACxBC,UAAsB,EACtBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,MAAM,GAANA,MAAM;IAEd,IAAI,CAACC,IAAI,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACJ;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,MAAMA,CAAA;IACJ,MAAMC,UAAU,GAAG,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;IAChD,MAAMC,aAAa,GAAG,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK;IAEtD,IAAI,CAACT,UAAU,CAACW,KAAK,CAAC;MAAEP,KAAK,EAAEG,UAAU;MAAEF,QAAQ,EAAEK;IAAa,CAAE,CAAC,CAACE,SAAS,CAC5EC,QAAQ,IAAI;MACX;MACA,MAAMC,WAAW,GAAGD,QAAQ,CAACC,WAAW;MAExC;MACAC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEF,WAAW,CAAC;MAEhD;MACA,IAAI,CAACb,MAAM,CAACgB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;IACnC,CAAC,EACAC,KAAK,IAAI;MACR;MACAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;MACvB;MACA;IACF,CAAC,CACF;EACH;;SAnDWtB,cAAc;;mBAAdA,MAAc,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;;QAAd9B,MAAc;EAAA+B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT3Bd,EAAA,CAAAgB,cAAA,aAA6B;MACVhB,EAAA,CAAAiB,MAAA,YAAK;MAAAjB,EAAA,CAAAkB,YAAA,EAAK;MAC3BlB,EAAA,CAAAgB,cAAA,cAA6C;MAApBhB,EAAA,CAAAmB,UAAA,oBAAAC,+CAAA;QAAA,OAAUL,GAAA,CAAA7B,MAAA,EAAQ;MAAA,EAAC;MAC1Cc,EAAA,CAAAgB,cAAA,aAAwB;MAGlBhB,EAAA,CAAAqB,cAAA,EAA0H;MAA1HrB,EAAA,CAAAgB,cAAA,aAA0H;MACxHhB,EAAA,CAAAsB,SAAA,cAA0P;MAC5PtB,EAAA,CAAAkB,YAAA,EAAM;MAERlB,EAAA,CAAAuB,eAAA,EAAqH;MAArHvB,EAAA,CAAAsB,SAAA,eAAqH;MACvHtB,EAAA,CAAAkB,YAAA,EAAM;MAERlB,EAAA,CAAAgB,cAAA,cAAwB;MAGlBhB,EAAA,CAAAqB,cAAA,EAAqH;MAArHrB,EAAA,CAAAgB,cAAA,cAAqH;MACnHhB,EAAA,CAAAsB,SAAA,gBAAqJ;MACvJtB,EAAA,CAAAkB,YAAA,EAAM;MAERlB,EAAA,CAAAuB,eAAA,EAAqI;MAArIvB,EAAA,CAAAsB,SAAA,iBAAqI;MACvItB,EAAA,CAAAkB,YAAA,EAAM;MAERlB,EAAA,CAAAgB,cAAA,kBAA6C;MAAAhB,EAAA,CAAAiB,MAAA,aAAK;MAAAjB,EAAA,CAAAkB,YAAA,EAAS;MAAAlB,EAAA,CAAAsB,SAAA,UAAI;MAC/DtB,EAAA,CAAAgB,cAAA,aAAiD;MAAAhB,EAAA,CAAAiB,MAAA,gBAAQ;MAAAjB,EAAA,CAAAkB,YAAA,EAAI;;;MAtBzDlB,EAAA,CAAAwB,SAAA,GAAkB;MAAlBxB,EAAA,CAAAyB,UAAA,cAAAV,GAAA,CAAAjC,IAAA,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}